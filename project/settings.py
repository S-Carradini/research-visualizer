"""
Django settings for project.

Generated by 'django-admin startproject' using Django 2.0.

For more information on this file, see
https://docs.djangoproject.com/en/2.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/2.0/ref/settings/
"""

# Standard
import os
import sys

# 3rd party
import django_heroku
import dj_database_url

#
# -- Environment
#

# Set environment
ENVIRONMENT = os.environ.get('ENVIRONMENT', 'dev')
assert ENVIRONMENT
_prod, _staging, _dev = ENVIRONMENT == 'production', ENVIRONMENT == 'staging', ENVIRONMENT == 'dev'
assert _prod or _staging or _dev

# Set base URL for environment
if _prod:
    BASE_URL = 'TODO'
elif _staging:
    BASE_URL = 'TODO'
else:
    BASE_URL = 'http://localhost:5000'

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))

# Django-specific key used for cryptographic signing
SECRET_KEY = os.environ.get('SECRET_KEY', '4r7(kZ>d?2ABp($`x8LZTvFRk4hl3F')

# Django-specific debug mode
if _prod:
    DEBUG = False
else:
    DEBUG = True

# TODO
ALLOWED_HOSTS = []

#
# -- Application
#

INSTALLED_APPS = [
    # TODO: review this
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'visualizer',
]

MIDDLEWARE = [
    # TODO: review this
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'project.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [
            # TODO: review this
            os.path.join(BASE_DIR, 'project', 'templates'),
        ],
        'APP_DIRS': True,
        'OPTIONS': {
            'debug': DEBUG,
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                # 'django.template.context_processors.static', TODO: Do we want this?
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
                'project.context_processors.project_settings',
            ]
        },
    }
]

WSGI_APPLICATION = 'project.wsgi.application'

# Local settings
try: 
    from .local_settings import *
    sys.stderr.write('local_settings imported\n')
except ImportError as e:
    sys.stderr.write('local_settings import failed {}\n'.format(e))

# Scopus
SCOPUS_API_KEY = os.environ.get('SCOPUS_API_KEY')

# Settings keys to make available to template context
CONTEXT_SETTINGS = ('DEBUG', 'ENVIRONMENT', 'BASE_URL')

#
# -- Database
#
# https://docs.djangoproject.com/en/2.0/ref/settings/#databases

if _prod or _staging:
    DATABASES = dict() # stub out
    DATABASES['default'] = dj_database_url.parse(os.environ.get('DATABASE_URL'))
    DATABASES['default']['ENGINE'] = 'django.contrib.gis.db.backends.postgis'
else:
    DATABASES = {
        'default': {
            'ENGINE' : 'django.contrib.gis.db.backends.postgis',
            'NAME': 'resviz',
            'USER': os.getlogin(), # default to login name for the machine,
            'HOST': '127.0.0.1',
            'PORT': '5432',
        }
    }

#
# -- Security
#
# https://docs.djangoproject.com/en/2.0/ref/settings/#auth-password-validators

# TODO: review this
AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator'
    },
    {'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator'},
    {'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator'},
    {'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator'},
]


#
# -- Internationalization
#
# https://docs.djangoproject.com/en/2.0/topics/i18n/

LANGUAGE_CODE = 'en-us'
TIME_ZONE = 'UTC'
USE_I18N = True
USE_L10N = True
USE_TZ = True

#
# -- Static files (CSS, JavaScript, Images)
#
# https://docs.djangoproject.com/en/2.0/howto/static-files/

STATIC_ROOT = os.path.join(BASE_DIR, 'staticfiles')
STATIC_URL = '/static/'

django_heroku.settings(locals())
